<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='london_merged' inline='true' name='federated.01bjqd70eeal2f1ck9pzf0uoju0n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes' name='excel-direct.1t1j0ti04a4t721abtlxk10ti3so'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/adityathapa/Desktop/Tableau/london_bikes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='DATA (london_bikes)' inline='true' name='federated.14ppwdw0mayyqd10tyhdb08f3new' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes' name='excel-direct.15qlep00lywwzu16r4qy618e8aco'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/adityathapa/Desktop/Tableau/london_bikes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15qlep00lywwzu16r4qy618e8aco' name='DATA' table='[DATA$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='Temp_real_C' ordinal='3' />
            <column datatype='real' name='Temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15qlep00lywwzu16r4qy618e8aco' name='DATA' table='[DATA$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='Temp_real_C' ordinal='3' />
            <column datatype='real' name='Temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DATA]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temp_real_C]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temp_feels_like_C]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[DATA_EED14380D8E64FC5A56057BE65AAC07F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1444811072501444608]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_1444811072503123969]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
      </column>
      <column caption='Max Month' datatype='date' name='[Min Month (copy)_1444811072503668738]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
      </column>
      <column caption='Temp C' datatype='integer' name='[Temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[Temp_real_C]' peg='0' size='2.44' />
      </column>
      <column caption='Temp feels like C' datatype='real' name='[Temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='Temp real C' datatype='real' name='[Temp_real_C]' role='measure' type='quantitative' />
      <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='DATA' datatype='table' name='[__tableau_internal_object_id__].[DATA_EED14380D8E64FC5A56057BE65AAC07F]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='empty-level' member='[Calculation_1444811072501444608]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='DATA' id='DATA_EED14380D8E64FC5A56057BE65AAC07F'>
            <properties context=''>
              <relation connection='excel-direct.15qlep00lywwzu16r4qy618e8aco' name='DATA' table='[DATA$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='Temp_real_C' ordinal='3' />
                  <column datatype='real' name='Temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_8EF20FBD38FE441AAC88AE818F79980C]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Sheet 3' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.14ppwdw0mayyqd10tyhdb08f3new].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (london_bikes)' name='federated.14ppwdw0mayyqd10tyhdb08f3new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.14ppwdw0mayyqd10tyhdb08f3new'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1444811072501444608]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1444811072503123969]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1444811072503668738]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1444811072501444608]' derivation='Day-Trunc' name='[tdy:Calculation_1444811072501444608:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1444811072503123969]' derivation='Year' name='[yr:Calculation_1444811072503123969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1444811072503668738]' derivation='Year' name='[yr:Min Month (copy)_1444811072503668738:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072503123969:qk]' />
              <lod column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Min Month (copy)_1444811072503668738:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]</rows>
        <cols>[federated.14ppwdw0mayyqd10tyhdb08f3new].[tdy:Calculation_1444811072501444608:qk]</cols>
      </table>
      <simple-id uuid='{2D15E587-18C4-4303-A58A-F0E706156DE5}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (london_bikes)' name='federated.14ppwdw0mayyqd10tyhdb08f3new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.14ppwdw0mayyqd10tyhdb08f3new'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1444811072501444608]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1444811072503123969]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1444811072503668738]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
            </column>
            <column caption='Temp C' datatype='integer' name='[Temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[Temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='Temp real C' datatype='real' name='[Temp_real_C]' role='measure' type='quantitative' />
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Temp real C (bin)]' derivation='None' name='[none:Temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1444811072503123969]' derivation='Year' name='[yr:Calculation_1444811072503123969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1444811072503668738]' derivation='Year' name='[yr:Min Month (copy)_1444811072503668738:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]' />
              <text column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]' />
              <lod column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072503123969:qk]' />
              <lod column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Min Month (copy)_1444811072503668738:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:Temp real C (bin):ok]</rows>
        <cols>[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.14ppwdw0mayyqd10tyhdb08f3new].[Temp real C (bin)]</column>
          <column>[federated.14ppwdw0mayyqd10tyhdb08f3new].[Wind Speed Kph (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DE3C5D31-9276-439F-9B3B-E360D8AB4814}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>weather</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (london_bikes)' name='federated.14ppwdw0mayyqd10tyhdb08f3new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.14ppwdw0mayyqd10tyhdb08f3new'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1444811072501444608]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1444811072503123969]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1444811072503668738]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1444811072501444608] END)}' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1444811072503123969]' derivation='Year' name='[yr:Calculation_1444811072503123969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1444811072503668738]' derivation='Year' name='[yr:Min Month (copy)_1444811072503668738:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:weather:nk]' />
              <lod column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072503123969:qk]' />
              <lod column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Min Month (copy)_1444811072503668738:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:weather:nk]</rows>
        <cols>[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{A9B43485-A374-49EF-812F-5D5E401AA84A}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (london_bikes)' name='federated.14ppwdw0mayyqd10tyhdb08f3new' />
          </datasources>
          <datasource-dependencies datasource='federated.14ppwdw0mayyqd10tyhdb08f3new'>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.14ppwdw0mayyqd10tyhdb08f3new].[hr:time:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14ppwdw0mayyqd10tyhdb08f3new].[hr:time:ok]</rows>
        <cols>[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{50F1B114-EEEF-4A99-97C1-851CE4F64089}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14ppwdw0mayyqd10tyhdb08f3new].[Moving Average Period Set]' type='setMembership' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072501444608:ok]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072503123969:ok]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Min Month (copy)_1444811072503668738:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8B2D8B9-507D-480A-AD65-F0A48197FA98}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14ppwdw0mayyqd10tyhdb08f3new].[sum:count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:Temp real C (bin):ok]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072503123969:ok]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Min Month (copy)_1444811072503668738:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1882232C-F62B-4740-B29F-35C5D695912C}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:weather:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[none:weather:nk]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Calculation_1444811072503123969:ok]</field>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[yr:Min Month (copy)_1444811072503668738:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EF299CB-9032-4E78-81D9-CE612B6C58B6}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14ppwdw0mayyqd10tyhdb08f3new].[hr:time:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14ppwdw0mayyqd10tyhdb08f3new].[hr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A826849-8972-4D29-8F69-3BAF1A5FF259}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19Z5Al13Xed0N3vzB5d8LmxQLYXWARCBCJBAhClBhEiVG0RMmmy2LJP1S0
      5SqVgksllVz642yXyyqLkknTLsuWVCWRFsUgUswkKABEJtJG7M7uzk7YiW9e6u57r3/c0P3C
      zLw3O7M7s9NfFWoxM/36dbjnnvSdc4hSSiFDhh0KulEnyuQow3bEhgmAlHKjTpUhw3XDhglA
      hgzbEbybg+fn53H27Fn09/djcHAQ1WoVSikcPHhws64vQ4ZNRVcCMDAwgL6+PuRyOczMzGB8
      fBwPPfQQpJSQUmZ+QIZtB9JNFKhcLoNSitnZWRBCUCgUEEURRkZGIIQAY2wzrzVDhg1HVwKw
      GjIByLAdkTnBGXY0MgHIsKORCUCGHY1MALYRKrUIk7PLN/oybipkArCN8MLpSXzh+2/c6Mu4
      qZAJwLZClmfZaGQCkGFHIxOADDsamQBk2NHomgw3MTGB/v5+MMYQBAHiOMbIyMhmXV+GDJuK
      rslw09PTqNfrAICXXnoJjzzySEaGu07Qz1gijuMbfSk3DboSgHK5jOHhYczNzYExhnvuuQeL
      i4sYGBiAUirjAm0yKGUghILzrl5bhlXQ1ZPs6ekBAAwNDW3KxWTIcL2ROcEZdjQyAciwo5EJ
      QIYdjUwAthPIjb6Amw+ZAGTY0cgEIMOORiYAGXY0MgHIsKORCcB2glJQWU3AhqKrTHC9Xsf0
      9DRyuZzrCySEQG9v72ZdX4YUlNL/Zdg4dCUAJ0+eRKFQwMLCAkZHR/HUU0/h7rvvRrFYzMhw
      1wFCCkiZkeE2El0JQG9vL+bm5jA2NoapqSns2bMHi4uLGB4ezshw1wGEUBBCMjLcBqKrJ3n4
      8GEcPHgQlFLs3bsXhGSZmesJbQJlWnYj0ZUAEEKyXf4GQkFlPsAGI4sCbScodBwFqoUx/vaZ
      M5t8QdsfmQBsIyjVuQaYL1Xxt09nArAWMgHYRlDIwqAbjUwAthFUlgjbcGQCsI2QJcI2HpkA
      bCNoE6hzCciC1GsjE4BtBG0CZdhIZAKwjZAlwjYe6yLDFQoFMMbgeR6klBkZ7rohS4RtNLom
      w+XzedcZbnx8PCPDXUcIITsmwwkhoYCMOLcG1kWGy+fzjg+0tLSUkeGuEwglHZPhGKMgQEac
      WwNdk+EOHTrkSHAZGe76IvMBNh5dk+GyRX/jkOUBNh5ZFGgbIcsDbzwyAdhGyEygjUcmANsJ
      XbBBickDZ/KyOjIB2EZQ6LweIDGXMglYDZkAbCN0Uw+QUac7QyYA2whd+QCZv9ARMgHYRugm
      CmS1RSYCqyMTgG0E1YVd4/yFTAJWRVeJMCEEoigCpVpuLPUho0BcH3STCFMKkJkJtCa6EoDT
      p0/D933Mz89j//79uHTpEoaHh3HgwAGjcrMHvplQSkF2+JyVkk4ISPZaVkRXArBnzx6cPHkS
      R44cwaVLl5w2sItfSrlZ15kBcIu/k+cspT5WSQmZ1YatiK4EwPM83HrrraCU4rbbbnP1AFYI
      MlNoc2EoiB09Z0IIlAIopWAsc/VWQlcCUCgUUCgUNutaMqyBbmqC7bGZ9bM6sq1hG6GbBZ0t
      /s6QCcA2QjeJsG5CpjsZmQBsI3Szpq0GyCJzqyMTgG2EbjrDZcUznSETgO2EbhJhyPIynSAT
      gG2Ebha15QFlIrA6MgHYRuhmQ3eZ+UwCVkUmANsI3dBNZLbwO0JXibA4jhGGoes1wxiDUirr
      PXOd0HUUqIuJMjsVXa3cs2fPwvM81Ot1EEJQKpUwNjaG/fv3Z1yg64BuOFeWN5S9l9XRlQCM
      jY3h5MmT6O/vBwD3YK1azqIOmwspFWSHyTAldWtEJbNo0Gromgx3++23w/M8UEpxyy23ZGS4
      6wnTlKyj50wIoBQIpdl7WQUZGW4boRsnOAsAdYYsCrSd0MWi7qaDxE5GJgDbCF0nwrIqvTWR
      CcA2Qnc1wVkAtBNkArCNoBd/hzXByQcyrIJMALYRVBcjkmTWF6gjZAKwjdDNgnbHZhKwKjIB
      2Eaw5LZO1nTmAHeGTAC2GTrt9uYqwjIVsCq6FoBsV7lx6ObZq6wYoCN0lQkOwxAvvvgiisUi
      hoeHUSqVwDnHoUOHNuv6MqRgw6B6V1+92ZXLGWRCsCq6bo1Yr9exb98+TE9PY2pqCvfeey+k
      lNmc4OsA+4xFLKDo6gxPNydYiGxW8CroSgBOnDiBpaUlLC8vY3h4GAcPHkQcxxkZ7nohRYZb
      q9ub7gyn30lzvUYsJBjNJn4CXQoAAPT19aGvr28zriXDGuimznc16+e/f+l5fODtR7F/OHuP
      WRRoG0FBgXa4abuQaRuzdL5URa2emUVAJgBbHn/69ZcRxQKA3tU7MVu+8tRplKrhqj4Z6VSS
      bnJkArCFoRTwreffxFyp5n5BQFZd2OVahD/9+stYKtdXNZWy9a+RCcAWhlIKQipcnF7UPwPw
      OEU9Eit+JoxiRLFEJGy5arsTd6ZJdgIyAdjCiIWEkBJVY68rpXBwtN8JRDvYwRixM5taJUBk
      IWuHTAC2MGIhIaVCaHZ8qYBdfXkslusrfkZIPUbJaYC251XZ/DCDTAC2MLQGUAhNIktICY8z
      qFW6XundHYjjxo4dLcdknVIAZAKwpRGbXdxpAKnAGV119xbGBFrNB7BaIsM6yXAZ1fb6IJYS
      OZ87ARBGANKP/skfj+OVN6fdz44CYXyApXK95V0JITMBMOhKAMIwxDPPPINTp07hzJkzOH36
      NC5cuLBZ17bjEQuJQs5DGFsBkC0aYGaxgun5csNnACASEpQQ/P7nvt0SNYozJ9ihLRWiWq2C
      EALf991QbAA4c+YMwjAEIZpHMj4+jrvvvjsjw20S6vUIxZyHcjVEHMcQQoJSPbDcEtxELFCu
      1t3P9TACpQRhJEApQSyUOT45bxxLxHFGkgPaCIBSCl/4whcwODiId7/73Q0CcOedd6JUKqFS
      qYAxhtHR0YwMtw5MXC1hdqmCu4+MrnpcLBV6CwG++fx5fPSdd0IqwPc4QChCocApBQhBLRSO
      8CZBkPO40xbCdO5LE+KkUiCEZk2N0UYACCE4fPgwlFINi9+it7cXvb291+Xibla8en4apy7O
      4e4jo05rphNTYSRQDSOEkUAx56EexpieL+tO3Gaz+caz51DM+RBS4enXLuP9b7sdxZyPOJYI
      fIZISBw9sAuvX5hpsffjzAdwaOsD5HI51Gq1630tOwp2vX/tR2fx8tkpCCnx1adPoxbGePns
      FP7jn/89IiHhewyUErx8dspsSpoKUQ9jnLx4FVIqnLk8h3I1AqAXt3Wcn3jLIRweG0Bzc2iR
      Ncx1aCsAg4ODmJ6ehhArp9wzXBuokYArs8uYX67h4vQS/viLz2FhuYbZpQrenFzQjE1Da/7y
      U6chDYVBKoUwFnjyx+POAbYLOhISOY9jcm4ZB0f7MTJYhGiSgCwKlKCtACwvL4NmXYU3DbFQ
      kCaZJUy299TFWRQCD5VahLmlKqCAahhjz64efOrDD2K5EoJRAqqbPiOMJQ7vGcTsUgVAEu+P
      hUDgc5SrEYYHivA4c2xSC2HarGdYRQAYY9lgBYMLkwsNsfZrRS2MXWiyXItQrUeYXazgyN5B
      LFdDTC9UcOu+QcyXquCc4uBoP6RS+MDbj2kNILUJtHdXD2YWKti7u9ft6FEsUQg4BnpzKOQ8
      BJw1hEGVUo5ikaGNAMzOzmLfvn04fvz4jbieLYk3ryzg9fMzG3a+ehS72H61HqEWxqiFMYb6
      8qjUtPM7OtSDmYUyKCFghrvck/dAUybQ8EAR86UqAo85EygWErmAoxB44IzC8xo1gFTKTY/J
      0EYABgYGcO7cOSwsLGQmkEE9Eh03V6jUIvzg5fFVjwkj4RZlNYxRC4UWgN48KvUISikcO7AL
      Pz43DUqJq/9ljLpa3zAS2N1fQKUeg1GdHb4wtYCv/+gscr6HYk4Li88pZherbseXUjsVmQ+g
      0SIAjDE88cQTeOyxxzLOuEG1HrkM61pYqtTx/TYC8PUfncVrRovUI+E0QK0eoR41agCpFI7s
      HcTUXBmUUKcB0j6AkAo9eV//nhEoKLx4egqnL83hlj0D6Cnov3mc4Q8//wyuzJYAJHTpTANo
      ZGS4DlANOxeAehi3bdlz9vIcJueWAQBhqItWAKBa14s/EhK9hcBoAF34Qikx/xkNQCkI1SaQ
      JcbZ30sFnJ9cwMfeeQcOjPQ54fA4w1JF06el1AU2CmgJjTbcQ7RzMsRdCcBOnThYrccdC0Cl
      HrWlK5eqISo1HauvRwL1KMbicg21KEYYCQihkPc5YqEpJYxSEKJLFykhzheghBiKtIDHtYnK
      TW6gFsb44GPHwBlFIfAAAD6njv352S+/gDevzK/qA5RrIf79n/1w1XssV0OcvjTb0fPY6ugq
      F76wsICzZ88iCAKMjo5iYWEBQRDc9J3hqrUInqcXm1JqVdOwWo/b9uOcL9VQMjtxJCQmZkr4
      d3/2JHzOIKSu/PI95hYrowQEevenlIAQ6wMAb1y4ijOX5+DxxDdQRiswQrFvdx/edmI/ACBv
      BEFIhdmlCi5MLpppk+0FoB4KzJdqq97naxdm8NzJK7h9/64On+DWRVcCkMvlEMcx9u/fj6mp
      KczMzOwIMly5HqFINNHs0198Dp/68AMrHrtcqUNI5YhmX3zyJD746DEslKpYLNcQx7ELRS5V
      6igEnq7hjQU4JYhjYRxVpbPFSgFSagKi2blrYaS1gvlOSvTndDGMRF/Bw4nDuxHHMUYG9FDD
      KIohpcLlq0uQUq3YMa5Sq6NcCxFGsfM9AO00f//lcbz16B784ed/hAeO7bkpyHRdCUC1WsXo
      qOavjI2N4fDhwzuCDFcPBfI+hwLBm1cW9OjRNjwpAC7mzrkmpH3v5Yt438NHIZXWDpaAFvgc
      S+UQu/oKJjQJ5ALPNbTyPQ5CCDhn4B4DIYDncXDGEAuFfbt7kQs8EACcU/cOPI83kNx29Re0
      IBGCWEhcmV2Gx6k5d+vrD2OFSi0yZLnkfVbrMb72zDnkAx/5gEMqdVOQ6bq6g6GhIQwNDW3W
      tWxZREIgFhKxkC5Onw/aC0ClHrusrBAKpUqI5WqIwGOIZTJQfKAnh4mrJeQDD2EkNNHNsDf1
      ZmJ9AG33E0LAmP43EgJvO3HALWQbBpVSOYqFxd5dvXjkzv0QUiGKBZYqIfKBt6ITXKlHqIZx
      i4n04pkrWK6GGJ9axEcfvwOvbmBe5EYiiwJ1AL34tdlSqUcuhNkMqRR++MpF97OQErUwxpzJ
      6FrnWCpgsDcHqRR6876r49UCoIwTbH0A6EgQsf/pbC83vT0J0eFRm+CiTQ1/GKPYP9KHH75y
      EWcuz2O+VEUh561orloBb3b6/+dXX8JiuY6p+TLGhnogzN+/+ORJ9//bEZkAdIA41rt/FAtU
      6hGiqP0Lr4Xavg+Mw2zbmswtVeEx5nZVKbUGAIC+YoAolm4hW56OdXwppQ0RIEII4liCMesc
      E1MmqdpqAABghGBybhnVeuT8jpWc4HI1BAFcxMqdgxFU6hFmFsoYGSw6AfnW82+u2qdoqyMT
      gA4Qy6Q/jxAKEyap1IxqPTK7q/5ZmLh7GImGUkalFIo5HZ05NDYAYZxcanbyJAyqd3ybDSZG
      C0RCJAIBmwcwUwPaBG4YpYhigVzAQQlBIeBQSuHKbAnffuHNhmNPXpzFobGBllwApxRSKiyV
      68j5HEIm1IvFciN1frkadvmEbxwyAegAdkFX6npX/PNvvtK228JSuY7+YoBaGOP//eANrQGE
      NDF7mtARlMIHHz2GJ+47jOMHd0EvY71760wtTPvyRg1AiF7gkdUAhICYZNlnvvSCqfRqlQBd
      IilRzPk6R5D3IZXC5FwZZy/PN9zn+PQi7ji02yXqkr/pa6/WI3icObMnigUWlhMBEELiP/z5
      D6GUQrUe4dzEPLYyMgFYBfOlqs7eKr3wqvUIj5zYj0hI1MKozfE1DPbmcebyHP7yO6+hXA2d
      85nu5iCVwuhQD/7Fzz2M3f0FgCSNb4WUoARut6dGM3CrAaiO5nCTH2BGS5y5PLfifTBKEMYC
      vseQDzzs3dUDKeF4Rxa1MELO48gHOiFXroU4c2nOXTOgM8sep4iNFx3GskEAqmHsOtldmFzE
      l//+9LW9hE1GJgCr4BvPvYkfvnIRhBoOfiRw56HdGB0s4upiBX/z5MkG9V8LY+QD7WCWaxHm
      zcIIYwmvwQSC2d2NIwsd+rSL21IfHBXCRHqIEYwoTkwgewwA+Lx9GJpS6swwzijGhnr1NRoB
      tZhdrGJXXx6c6ZLKK1eX8e/+7Ek8+8aE016Bx+ExCiFM/6FYYKmcmDy1MHYFONU2m8RWQyYA
      q+DH56ZMxIU2RFkoJbgyu4zPfuUFfOH7bwDQEZ96JBB4zO3eV66WEHgMUSTAOXNEtGZn1Sa8
      CLECoP9GU4vcRoXsMdYJtsfo87TP3DKqhYYSgl/7uYfQW9AmULkWNdQFLJZrGOjN6R0+FpBK
      YWq+jOdOTUAqpesLfH1/lu8UxRKzSxWcv7IAQOcLrFAtVcKWarSthkwAVkAUC1yeKSGMRQPV
      gBJte0/NLUMpoGJqcf/iW6/i71+5qAUAQE/ex1yphnzgoRbF8A1n3+7+6cWaOLjahrYLmlHq
      dvo0NyiKZer3yaijdhEgwPgAJnR7721jLmpUriUa4KlXL2GpUkdPXvsJUapscnxK0yf6iwFy
      vk4dEcDxlt4Yv4qvPHUaF6cXUQsjt+hLlXomANsVpYoeMBFFApxqlS+ljs8zSjBlanFrobZ3
      F5ZrmFmsmLYlgO8xVGoh8gFHLYwReCzRIk0L1ecMzDi79Ui4SA5LJcH0jktcTbB1gimhTmOs
      RFFipk+Q5Q4RonMR5aperLGQ+C9/+TRmFipOANJVY2GshaGvGCDvBIAgiiV68j6WynW8Pn4V
      //pPf4ByVWsVZZ6hEPocT/54HN97aes1UesqEzw/P4/JyUnk83lQSuH7PqSU2Lt372Zd3w3D
      zGIFe3b1ughOLCSqYexCkta+L5mQn11kgc9AQOBxiqVKiN68j1IlxO7+fJKtpa0CIJUCoQRn
      J+Zx+z6dbU/b9xqJ8HBKQVJJMmA1DUARxgL/9Gfvd8cpqVA3/KDp+TJqUYzLM0u4/+genQiL
      Ew2gyXoK/cUccoFZMkRryd5CgPlSDYvlGgghmFmsYGahgt//H9/BgZE+5yxPzC6vMdj1xqAr
      Acjn85ibm8PY2BiEEHj99dfx8MMP35RkuMmrS9izq4h6GIMSYHSoiHMTcziyZxCMENSNg7dk
      CG6A5tFzqndrj1HMl6roKwZ48sfj+Ojjx0EMoY4ADUQyzghoTKDMM6SUGI4VgVJSH6t0hzfl
      TAoFJWXLom9HUCPQuYi8z1JkPIEo0gS6+ZIurD87MY9H7zoASgnqUYzYONsEOqdRCDgCjyOO
      Y5Qqdbx8dhK9BR+XZpagFFDMeRifXEAtjPH6hRkM9xdMF7oYQgj32ZnFCp47eQXve+jWDX9v
      3aIrAVheXsbg4CA456CU4r777kO5XMbAwMBNR4a7ulTFvuF+nL08B8oofvL+I/i9z34bRz+8
      29TZ6oVYrkXgnGt/oBahkPNBoMlsi+U6ju4f0osn5+vFSrQGSRPJfI/rSBHXiarB3hw452CU
      wuOa3PaP3/cWFPIBOK+5z3geB2MkKYxh7QlunGuate974FwT6kAIhCHhCQn0FwNcmV1GX08O
      s6UaYiEAQvCBR4/h7OU5SKlw674hvPPeQ+Z+FS7OlNBXDJzplQ84qsYklFKZ82vSXBhLBL6+
      vlMX5/HUa5fxM287esOrDrsSgN27d2P37t2bdS1bCqVqiMOjA3jm9cu465YRl/63MXmb/reO
      oCXK+SYK5HOKybka+ntyyPkcP3HfYXz3xQv46x+cXNEHsM7xhx7TDQnS5s2Dx7WZaReMC4OS
      zqJA6X+JKaCJhQQUEMYCxZyPCRO18hhFra5t+d68D0IIdvcX8Pi9h9BvKByU6mdQCDzkfI4o
      DpHzEwFQKplvAJjNwdQmnLp41XS6W9lvuV7InOAVEIYCxbyHeiQcM9OyMzmjDT377ctWgOMB
      eZyhVNGZYUYJfM5ACXB1sdLiA3jcRHtMtteeg7X4AMmCsZGj9O9WFoCkcAbQkSSZWqChWcjS
      MFI5T6JA1JhA+YCjvxi4c95/+xhqYQyPUwz25gHoHEHNZMulETCbMS7XkrLS8ekl7OrLb4nC
      /B0lADY93wnCWCDv6x0rnYVllIDTRAPYyI59uT7X3H2fa2e4J+87Z5Yx6mp90/A4A2PJbu4b
      AUhrAAu7yHmqHiEJg7a/F/t99jOUENTqkYnZa6pGPsfdvaajQPb7m9fqbfuHUK1FCDzuiH2B
      z5wGALSTbOndlZQACCFRzPtuE7mR2FECUK5F+N3PfLujY2PTl5NRgtHBomsJbxeyjavbyE4s
      dGyeM2qiQJoyEPjc7eSMUkzNlVuiIYkJRMB5UmzDaKuw2IgoY2ZhohMNoHfxJFxK8HfPnsPr
      52cgpQ71WvOEMwqPUZQqdXzmS89rRxxtcheUolQNUQg8eEazaA2QCEAYCWcCVetJfoAQgsDn
      LoTcDvOl6nUJquwIAbAF43/yN89hdqnS0YONhYTHKTzO8DNvu72hON2aQL6nF7nVAIHPdaKI
      GLOGUWP6GEIb001u337XgYbv8jzqdnufMWer2yxwGgRaAqyQKKUMmW71MKg1ZexxkfFnbJMt
      KwCMahNovlTT5hohbeuDGSVYrtSRz3l494O3ghAg57VqAKWAi9NLKFVD15VaH8tX7T7xb//v
      k05DfPXp05smDDtCAKr1GL/7mW9hbqnqanDXQiwkfLOLWxPI8ne0E6yTW4HHnQYY6s2hmDdR
      IM7AKXXdnakxnRTgWpZYeCkn2JY3Aomjm4bWAMRpgMDjHSXCKCXuAEI169TjzPQZFcgH3DFO
      PcZQroYNBTbNp2aMolTRGuCeW0fAqNZ2tZSJGQuJidkSfuO/fR3jU4uuJyqlBIHPUA9XNoGu
      zC5j0TQR+Kvvvr7icdeKHSEAUSxwdbECQgj2Dfei1kHfG2sC+ZwZAbA7shaIKJbOXv7eSxew
      VK7j+MHdLnNr7Xpt3hCnAQC0+gCMOkqDzgjDHddqAmkNYEOff/DJJ1znhxVNoBSVAtC+gtVw
      yuYIcp5xkgkKOQ8zixUohZQGaDonJdoEynEnpEEqCgTo3IHNbttnKqQEoxQ5j7e8B2kIevUw
      xmK55uabbaYltCMEIJYSHtNcnHygB048+cpFTM3rRlVSqZbmt3qBMHhOAMwiNiaQK2IhwDee
      O4fphTJ++f33ua3S96jTADZiw1JOaBqW3gA0Or5tNYD5vRWA/p5camGvzAVKm0D2OvQz0VSH
      QuA5DTAyWHRt1x1jtcUEoijXtAaw5855zEWGADvVMvmc7YTNjAa4MLmAv/jWK+7vr1+4is9+
      5QXMlapQStdXhLFAtIlt+neEAJQqoSa1UWJsT4Fv/OgsLs/oyq5aPcan//pZd7yNkVsTiDEK
      iqT4hJuITc7n4JwhjAQIrAOsLQ2PM3CuHUrrJCYsz9bHbp3FT7znnlQUqJ0TTJzJlP5d+t9m
      WJ6RixaZc3qcuj6jWgCoi2AdHO13x3LWeh2MEigFFHIeKKEA0RpAqYSWLaRy1xl4zFEqKCUI
      PI4rs8t47uQVLCzrPkQnx6+iWo8d/eTUpVmEkWiIFm10/fEOEYC6GRpHkc95WCrXMT69hHIt
      xLmJeXzh+280PGSpkp3WY3onT0ygpDjlX/7SoxgZKKJuBtK5hBT0Igg8brK++jF/OJXgaoYl
      nt1/dI9bqH2FwO30FnaBps9h/3clH2B4oICczxs0hY4k6fvQXS64o1wDwEfecYde+M4sa9UA
      AJAzUS5A+yNAIgA2rwAAuYAjNsVBWgPojejkxVl86j9/Becm5jG3VEW1HiGKJe6/fQ+efWMC
      f/GtV927iWKB3/r0N/D0a5fa3+gaeOnsJJ55/XLD77omw01MTKBQKKC3t9dxPPbt27euC9pI
      KMNdtyHLNGYXq4iEMIuH6l6cscDzp67ghVOT+Obzb2KwN+eOlzIpSgEhKTMgSYQRAL2FAIxp
      3owzM0zGzOMUgQmjWg1gnd/mxWQTYc34lZ+9v8GEAOCIdunj16JDD/Xl8djdBxITjNpIUlJj
      HHjc+ToA8PCd+zDQk3MaTzW5wYkWYS5EmvNNEtCzGkC65FvO5zh7eQ6f++qLoFQ/m7rxF5ar
      unVMGOsu2XEssX+kD+VahHNX5nWjAKkws1jBlbkSJufKWA8uz5RwYXIRU/NlfODtR7FcDbsT
      AM/z3MKYm5vDm2++ueFkOAUgMiHGNL745Ck8eHwv9uzqafu56fkyfuOPvoE/+vX3u4Jzi2dP
      TujdyVCRNWdd4XsvjeP+28f096qESBbFwix2hZ955DbEcQxpbH59DmO3S6GruRSQ9xmUlIiV
      1DF3IwTSENY0oc2ob0twM3jo+F7cc2SkhchGADSbv1IKeIzq74ot7SAhyK3Ure0T77nbfK8E
      lDQtVwhmFsqYWSjjkTv2gTEKKQXiWL9HRs39UgIimoh25j4Z0WNbKUkE3TcaT0kFxrWg5DyO
      SzNLGB0soq8QaEc8VSuglEQYxmZeQmRMLJVUl9VD1OsRenI+ojheX1c60whgcq6En37oCP72
      6dPdCcDc3BwKhQIYY2CM4f7770elUtlQMtyZS3P4ylOn8Wsfe7jh9+PTSzh+aBgHVuhGFkvt
      uNrxn0JKlCohKCFYrobYs6sH3Di1QsLZtbb7mVLKdXyLhHbUPM/DTz1gGItEL2TPYwikZ+x8
      7qI2hZwPzplLlnHjO+hnpa/JEtU83ti9jXOOYj5ouad2YJzD8xh830s5y4nP0Em3Ns6502ZC
      KsyVqgh8XerIGW+YR5A8s8ZOcJ6pe8gFniHuEReN8j39MzNRMgDIm00pFsqdN6EkmkgAABhM
      SURBVF2N5nGOSCgdKlXanNLBAf13IQFhfA4hseZ9Xpkt4alXL+Ejj9+RPLtUOLsWSXznxQvd
      CcDBgwe7OXx9IHDFJmksV8NVM4dCai5Ouorpr777Oh6/9xBO3DKC505OIGfUfBQL9BR80wOz
      MaPLKNo2mEoTz5K8ADGLnOJTH3mwwRntyfu4/+ge9zOQdoJXMNY7gDJaLH2GtUygZqSryJjJ
      CXCeRKvSx1Gi8xftfACb8bb3VMh5zkfhjJqKNiMAppBG+wD6fOnmW8LUJ3hcvx/uIkm2+F4P
      FdEtWdZ2hKfmynh9/Co+kvqdkArVMAKjFGcuzaGY87eeEyyExNT8cos5VW4jAC+cnsRnvvy8
      Lu4WSb3t1UXdBVmY4XN3HNwNzigCX7/kKJbYu6sXJw6PIBYSt+0bglTKdXBQsl2oEq4ARbck
      1L/jTC+CI3sH3bGUaAf2w48dR+BxHB7TERVi/rsWAbAcnfRCXYsK0QxXVJOK7nh2t06dwpZk
      MtYaBUqCAfZYguGBIjilJoNOwRjBnYd346feesQ44ToDbQUwnZD89gvn8fypK/AN1dxjSSQJ
      0D1XP/eVF5EPvI5a1VeMM62Uwme+9DyePTkBIRWWKyGq9Qjj04t4+M59W08AYqmwsFzDYrmO
      pXIdr52fQbUeoVyLnNNkMV+q4ulXL+P7Px537QWFVHjx9CSefGXcHbOrP68FwOPgTBeIe5xi
      qC+HWEjs7i84otwf/K/vuRh/M2wUyGPMaQDLnUnD5gwA3QLxk++/z/0epPOduu3zaTPiNKkI
      6+wclnX6yfff53Zom9RLn8IuVN9jbTSA2QgcDYOimPMQ+NxoSZ0J/+T778NPPXAEnFGcODzs
      KOWUwMX3H73rgJuM4zHmwqCAfp/FnIepuWWcvDjrWrashcVyHeVqCKWAV8/P4KtPn9FmsZnT
      MLtUxcHR/q0nAMIkoF59cxp//DfP4Xf+5Js4fWnODZNLIxYS73zLIZy5NIfYdlxQEovlOuZL
      unBkuRqhmPc1L8fT8fN6lFbDuoxRKi14py7OYn651jb+rj+jw5rJ0IokzJk+lrSJ0thoybVo
      gJGBIn75p9/S9H2N37MWtAlF0F8M3GJKGm+lTSC98+d93lYD2AiQ/ZkxqmkRRpisL2E/+eu/
      8DZHGtRVb/q79w/3Oco4Z7QhmdaT9/Hxn7wL33tJb2h5f2UNoJTC//7aS4higcXlmt40oxh9
      BR9RJCCFzjRXTK1DMedtPQGIhcRjdx/Ad148j4VSFXccHsbUfFkPkoua591qWm0UCwjDx5dS
      YalSx9ySZhNW6hGKOQ+cUhfqq4UxPGPv2sHSSgHnrywgjAWm5pbb7tK2IL7RBKJOXVuQFXZ5
      2wPoWjSA7zG89VhjDfZaibBmJH1Hm4S0KYjHUgm/Fg1AqOtODST+wm9+/NEWDtW+4V68+4Ej
      rkUjpcmzv3XvoM4RmI2PM6q7z5lnSojWEFbrpTVALYwbHOmZhQo+/703UDNUinI1xJXZZQz1
      FaCQ1DbXwhhCaCrLlhKAybllCCExPFBEFOuoy0fecRxXF8qITaflNOxYoSiWjndu+1fOL9dc
      hwVm+DuBZ3eYyJDO9C4U+Lrf/YtnpnDi8LCbvNiMpBtzklnlhuOfRjrr2vB5tGd4XivWqgdo
      Rrrtyi+86wQAvbAOjPQ1HGd36lywggZImUy2VsIR/1KmYW8hwL23jZn+RElLlygWePcDR8Cp
      LsDxjdBU63HDM7X1CQRo8AE+/73XcfJiMqppqVKHgkIUSyyV6/A9hr979qwJqaukCZiCyd1s
      MQH4r3/1DMr1yLURlEoPeLi6WIXHKeqm+/LpS7N4Y/wq4tRYIWEqs4QRADsFhTsbl7jElNUA
      ekeSyPmaJzQxW8KBkX6EUdyyqIFUNZalBxCCob68i4Qkx5G2i9GaRhu7/NdhAtGktsH2+Snk
      PHzqow81HafvMd9GA1gTCO6ZJI6yzQk0Z7EpNQ26jACku1zHZuYZZ/r9pIdzMEYdBSKtAWzB
      jcVyNXQlnkuVEB989JgTOLs27DnCWOi2Mx09sesAm/SIDctSKc1HKOY8VOoRevM+JmZLuDC1
      iN/77Lfx3RcvQAjljrUPyFKTA09PUnEqmlH4zgTSndpsz8zAmEBSKvhc+wjNLw9IbNkkFArs
      2dXbxgluH+khRDMzN7oQfK2a4Jbjqe0qnWS4CVqJd04DtPEBElMw8W/StOw0BST9GR0F0tMu
      o5Q/EDWYQHqDsg/cNupSgBskCOhJl2kTqFwNAaILcaRUGBksOn8P0CYQAdBXzCGMjDPe0RO7
      Dnjh9CQWjdli+2gS6JhyPYwxtqsXed/D069dRrUe4/lTV1CuhfBMTx1hmIexlGCMoLcQmMSY
      Pr81gVjKB7A2aeAnnH7GtKZpfnkA3FZrHT5CCPbu7sFYU3Z6RROIJHW/G4nEDOnseGqjUSYa
      s5JPYk29XOC10QAUnLEmbUZSfyctGwOlBMIuetKYE4hiiaG+vDNRPRNokIZQZ/M1+cBLNjtj
      8losV0P0FQKEJpNv6zacBhA6v7O7v4DQaqLOHtnmQkiJz331RcwsVhBGevEZBQDfY1qKCcED
      x/Zgdkn3sNnVl8eFyUVNCzDaw+cc337hPKA0/yVOtRm01AROdccDG6eWSiFn2hYKKV3Hh+aX
      B6DB3nUmUG8e/+R9zVGZ1t1U/z6JwGwk1ucEEzCSDNlod0n2dO2iQIwS9BVXzl5bLdn8O/tZ
      W5XGmO14LfDBR48lGtrUSNiNzZagpk2g5mmXy9UQg715/OV3XtOsWWYjfkkREyG67UwYrUMA
      FhcXce7cOUxOTmJmZgaLi4uYm1u5LXeneOnMFCaulqAUUI+F4+6DJM6StRWtTTfYl3eZQ2mk
      2/cYvvvieUilsMsIQHNYz2oAzpJClcDYwbFRz9oEakPrsCE/QsyIovZhzRWjQNgkDZC6rk5g
      Q7hOINuvfwA6MDTQk8PYUKOW44ziNz/+9rZCp8yEG97ON6K2OMf4ACkNwBlJ7dpaQ9tMsLX1
      A48jFsmchbQPUK3H6Cv6eOWcru3gnCI0zq7H9XnzAYfHmfMBuu4Mt7y8bKp0FM6dO4cHH3zw
      mslwMwtl7OrLY3apglo9AiWWSai7pYWxME6lcuM7Cz7HlOnaJqVEFOsGtNW6zpQeHOnDxelF
      EEMQG+zNoSevH141jMGojcsDDxwdwzvfcgivvDkNSnSf/GKOtxKulC3q0IIlVijUIABkE+EN
      0EQ2TaJr/du1wD53pVYmw7WDEMLV+wohEMeNi1kpBRELjAzk8f6Hb205NyUJQe7xew4asp2C
      ckQ50vIZ7XfoYyIhoEvudQbeEu90wlO5QIIQOoa/f7gXB0d73YhX/W8y7lWkajgI9Huohfo7
      bPDjE++5G29OLCCMYigluxOA8+fPo1gsIo5jMMZw9OhRLCwsYHBw8JrJcDlTTBEJBd/ngGkE
      yz2Wqs7SC/jtdx3Arv4CTl6cReB7hgOkozzVegQF4IOPHcezp66AMQbOOf7BEydAiB4kUY8E
      fI+7SSuFfIC+Yk6H4kwq3m8aNwoAT9x3GIO9Ouqjd7j2j0+bW6zl75ybzhFt/nYtsM+ds87I
      cOnPca6zvJy33q/esTs758+/6670B13isfmz9nx63KvuhseZRCwVPG53Z23OclP4w8x8tQMj
      /RjsLQCwz17vYO47iCbnSQXTkUNP4OScwfc4KrUQd90yikszJU238Hh3AnD06FEAyY6zUdEM
      IZWrJgqj2HFUbF8aO2HFhtEOj/XD47o1iQ2Z2knrUFoj2JiztUOtmWIdKsdWTFEBlIQxgeK2
      UaAPPnrM3f/H3nnnivdD6EpOsL2OjY4C2fN3f15rAq2EdlPv14Rq7wMASTKRGsfU+QDGKXUm
      EEuOA+AqydKQstEJ1ixSpt+/yUNYW9/j2rewNd3XFAZtVyN6LZDSOKJQ2v6mSQSAEPugKNyg
      B2MfuuFzJg8QeNy0+ZDuoTZHc+wDpobole6raYvNV3KC0/f/yIn9K/+9TUjRfm6tBbcedOsE
      p5FurdgO67Fqb903iF19+bahYJswSzLI1IVBbdMxW73HaFJH3a6tvI3+uZ+lQs7jxnHWYdh6
      FIMRzd+yESHOku/YIlEgrQFgxhDZXcHeNOcUnOpe+O5BWSlmekFFsYBveOvCOL+RkC27EGMk
      0QCmaB2w9F4taOEKeYBOsbITjE1xgi26SzCbqZI2F9DmiJ9++Dbcsmeg6+v46ON3Yv9wX9u/
      6Ya/CbkuyQrrKjyWitxYISAuHJpc5amLs3jt/ExDFEgp5RKjNhFXNwvdM5WAeu0wFwbdErPu
      pdJ0BAW4JBSjBHWp23F4pqjEagBtvpiFTKiTaK3+FGKT8FAKLQuZU+qKtRnTHHYgSQpxptt4
      tM0DdAhKCEjbNEJq4MUmoJvz2mVDTSCgnQQ0c446vw60MFYtGCFujBSAJBOc3tjMTp02gbT5
      qB/qUqWOf/N/foDZpWqTCaQJbtJqAJaYu72FAAulmjOHLNVmy2iAnNmJw1QIzJpavuHwUEqM
      eUPdQrZhtboZQySkdBogXaZnwVImD6MUxZyp06UJz+daNQCAtrF+6wNs9PJPFnMXZ1bJZ8gm
      5CZsT6Fm2I4QdjNPt36x9cehCY8y1r5NZBQLzC5VATRmgpVSePCOfbhlz4DjItniprGhHlTq
      keOFAWZD2tC7Xieksd8BoOamGRKn8nI+B6fNGiBxbn2PJmOIpIIQypgb7TUAkBR7FJs0QOIE
      rz+itZLZvGkaQNnzd/6RR07sd90lroWduhra+QC6g1zS1cK+B/3/KZ+sSQNwRsHMdXqMIm8m
      1aQ1jTWTrDNttTijxNWSpzPUlG6RtihSKregqzWbpU345EXTtcwmwhIqgn1QFD96Y8JVHelm
      rglbMw1CYXj8VgMkPTHt78M1nOD1YrMSYVYCuhGsf/7Rh12hi82HbCRsV4xmWA3QQKOmVgMk
      u7PV7MwJQEoYOMPeXb0A0BIFcjUaRnsQc969u3vd+7WCQbtNhG0WRMrBWa6GDTs+ADPhnDju
      jo4WJIxG32OYWajg7XcfRC0UeO3CjKu8au2rk2QjdR1rYgLZ/1Yiw3WO9jqAbhIVYj0mkD10
      oyN6Fu996La2ESRGtQ+Q7k2UdojTBflWC9ifW8o3gYYokB0vldYk1nQuBB5GBotGOzAXkNgi
      GiCZjVsLY91sKXXDxXyjBrD2IYHeuXM+x8GRPhwY7tPH0qQdeDs+inWiGW10gi1XP7xGJ3il
      0KHzATYpCrSe864UsbpW5HzuzJQ0KNXUE/uVjRogMU8Y1VRz6/imN0SPMzesT6qECiFNVttW
      pFkBY0bLffwn79IJVcM03VIawHLqdYMl7lQYAMdH13RaE76iydCKvM9x674h9BUDeG5HWcEE
      QhKLfuD4XjfG07YhtBTpa3WC22GzfIDjB3fj0bsOXFMeYLMiU81gpimWZXemu84xkpRZEkKw
      d1cvzl7WXDO9kyczFGwdgy2A6isGLnHqNAmBG0hCCMHj9x4CAEfj7toJLpfLmJqawsTEBK5e
      vYrFxUXMzs6u/cE1IJXC8YO78PCd+1xdaNoJtmS1NBnOqsiAM+R8nuzkjLpd1rbgS8MuQmZK
      JFs0AEmcrvXig48eW5EpuRkaoCfv4+BY/7p2cr2JbOz1rAbnA9Ak8Zj2AdywEABju3qwe6AI
      QGd4005wLkVg/O1PfwNA0jLG+gAESXfuNDyenKsrDRAEAaamphCGIYrFIp5//vkNIcMJIdFX
      9HH/7WO4MLkAIYSbqRXHMcaGipoD7s6vQKAQeAxKaQpE3tfkNWYcujiOQQlBMWgktUkpTCiy
      kThGXAtwoxFW6bK2Fu6/fRRA+5GlHqNN4043CIag2O01K5Ui9qkNvqY2INAd99z9q9S6UVJH
      ZqimR48NFvCL77oTsSE6guj7s9V9gDaZa2Gk23RKCak0cdJ2rNOWReNzYcYUjeO4OwEol8uY
      n5/H6OgoyuUyjh07tiFkOAXdGWygJ68nlXOO/p4c5ko1cM7xthN6osrMgq4F8DiH73HTjU3/
      q5TuFuZ5ulsb59qP6O/JNXY0M3wfz2vtzmbHkgJwI0U3Gr/ziXfA97y1D+wSmtjWHRkOADiz
      ZLjGjtObhU+89x4Evgevrk0g3/ec+et5HDnfc9natFmWDzzdaoVz+Jy7iTZL5bpJXHIoENN1
      j5n3y/TUyyaiX2BaunPeJRmuv78fb33rWzecDGdtt4fu2OcaTPUWfKe60iEz+y9nSQjz1r2D
      btxOcyvvYtM0liQK1Hjt6YJukvqujYZtH7jRsHZz95/b+CL91XD3kVHzvfrndCLMtkZpJ4jp
      skzOKXLmOc4v11AzteLKcMdsuSagG/U235+tNgO6NIEsNtphstk6SglGBrXN12MHS6eQthXT
      NIZ0VzbOkpurG+5H47UnE1Oaz20dKBsm3U5YryNrBWfj89OrI92ZIp0UW6lTduDzxAcwfh8A
      zJdqEFLhi0+edNwxRomb8Omn7H0LjyVCsSXecnocpwWlpGHcDpCad2udY6/NVPSUBtizq6dl
      HhclBJS17npOAxBy3XfFjcBKnSjWwlps0M2CFbpmKoRnepQ2g9Nkio7HqOs1ulwJAQDPn5pM
      5QGo6VNqcg5Nm5mt5wDWqQE2Gu2a0Y4O9eBgU5+aZKfQqnKoL4dm6LivvuHf+sVHW85LyMrN
      XnUeIMkIbyfQazSBrrcMWI1vi/OtILSL2gCmNYpJetkGBwBQDSMQ8zupko4UrlN12ygQXV8U
      aLPQTgMcGu3HITOmx4IgYQXuH+7Dr/zs/S3n4mmV2q6wnTRmFS3sC7FJss3IA2wu1mfErFTA
      v9kgRNMbAP3sHzi2VzN/PdrW/PR5MoL1I4/foUsooaNAxbyPMI7hc9uXlKBgEmV+Gx8gPWFn
      S7zldhqgbYqeJJlcS1xrBm9j3jSftx3SmeDA45vmrG4WinlvXddMycbzgDr73uT97d3Vi9/6
      pUehOzm01wDpUUz9xaAhDNpfDFCPREMewD6LdP9Si2t2gjca7TRAO1gy2WrmSdoJXhVNKYt0
      Jri34G87DfCu+25Z30J2ptP1lQJnermMvXVwW7UzALzzLYcamuImg8KBn/+JE/jaj846KgRP
      sUXbl2VSJ/VbQwDaaIB2sLyV1Y5tN9GwHZprXdOZ4KHe/NoXvcVwrU77dfcBjC/Weh2kgeFp
      0azd0pvg7v4CmHGSLTnSHv/AsT0usph8STJ4Y0sIgOpQAwCpnpQroJ193/qFbT5Hk0awdx4e
      7uhaMqwf1hdrhw89dmzNz9PUZ31PzztWpoLwI+847nb+h+9sX7ttOWBbQgDaFTy3gyXKDfa0
      Rn8s0pPWV4JC6/RxGwLtK+Rcx+QMm4fVTNn3PnTbmp9Px/ZtXberB1iDyctTXbG7EgAhBKrV
      qhsj6nkepJTI56/NZJBtWl60PU4pEKzVkm/t7/tH77kHu/sLDb+zCRn9XLdXCHQ7woWa1/uo
      U5+z7c8tA3jN76YE735QDz/sSgCq1SquXLniqBBTU1O4/fbbEQSBs6nWA93aXK7Yac2CEeBj
      Txxf9bvs7r7auR48pofXNR6jzFjS1a/hZoM0JMMbcd+EEkghoNbhgCgzhFsI6YqjYrH2GmpG
      1ybQwsICCoUCKKXo7+9HpVKB7SDWnHHrFPpmWjN2zfApxfsfObrqMZzaap/urkVnIMm672G7
      wrYkvxH3bROP60ngKaXQk9d0mZzvIfA4KrVq1/fRdW/Qe++9132J/fdaGjMBWnk1j+hcL2x2
      sdtz2flf16swZKugvyeH3/6Hj92Q+3YdKdYjAObfB+/Yq+tBAo7LV6Ouz9WVANgB2RuNX/3Q
      AxtGPRgZLOKhO1bu2rYSNqNj23YAIQQDqwQVNhM5/9piMMWch1/90AMghCCf81Ctd1+/sSWi
      QKNNrbevBQM9OfzEfYe7/pznUQxuw/j/dsa/+uUn1v1ZAuA//bP3uh2/mOtsfnAztoQAbAUM
      9eZbxo9m2FxYOvt6YEPi6XOth9OUCYAB2aEm0M2CQuCv6/3trJBHhpsWxZy3LjpIJgAZbgoU
      12kCZQKQ4aZAMd9aQtsJMgHIcFOgJ+/rXkNdIhOADDcF1msCrSsKND8/D6UUCoUCpJQoFApr
      fyhDhk1ET359UaB1CcD4+Dj27t2Lp59+GsePH0cul7smMlyGDNcKQvTgjE0nwwHA8PAwJiYm
      MDQ0hOXlZYyMjFwTGS5DhmsFIcA733K46zVI1DoaesZx7BiguheL7ne5GTyhDBk2E+vSAOk+
      izuNPZnh5sL/B958x2IuY0JPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      V19XTf8fZtmRSpQJXqIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      PgpEov0bPOE1VEiyyzsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
